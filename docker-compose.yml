version: "3.8"

services:
  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    ports:
      - "6333:6333"
    volumes:
      - ./qdrant_data:/qdrant/storage
    networks:
      - my-network

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      LANG: en_US.UTF-8
      LC_ALL: en_US.UTF-8
      LANGUAGE: en_US.UTF-8
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - my-network

  neo4j:
    image: neo4j:5.11.0-community
    container_name: neo4j
    environment:
      NEO4J_apoc_export_file_enabled: "true"
      NEO4J_apoc_import_file_enabled: "true"
      NEO4J_apoc_import_file_use__neo4j__config: "true"
      NEO4JLABS_PLUGINS: '["apoc"]'
      NEO4J_dbms_security_procedures_whitelist: ds.*, apoc.*
      NEO4J_dbms_security_procedures_unrestricted: gds.*, apoc.*
      NEO4J_AUTH: ${NEO4J_AUTH} # Format should be neo4j/your_password_here
      NEO4J_dbms_default__listen__address: "0.0.0.0"
      NEO4J_dbms_connector_bolt_listen__address: "0.0.0.0:7687"
    ports:
      - "7474:7474" # HTTP Browser Interface
      - "7687:7687" # Bolt Protocol for Database Connections
    volumes:
      - neo4j_data:/data # Docker-managed volume for data storage
      - neo4j_logs:/logs # Docker-managed volume for logs
    networks:
      - my-network
  
  fastapi:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./app:/app
    networks:
      - my-network

networks:
  my-network:
    driver: bridge
    
volumes:
  qdrant_data:
  postgres_data:
  neo4j_data:
  neo4j_logs:
  neo4j_import: